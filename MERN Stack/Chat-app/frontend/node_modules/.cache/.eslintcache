[{"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/index.js":"1","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/App.jsx":"2","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/Messenger/Messenger.jsx":"3","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/Messenger/Settings.jsx":"4","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/Messenger/UserChats.jsx":"5","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/User/Main.jsx":"6","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/User/Forgotpassword.jsx":"7","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/User/CreateAccount.jsx":"8","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/User/Login.jsx":"9","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/User/ResetPass.jsx":"10","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/PopUp/Popup.js":"11","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/Messenger/SearchWindow.jsx":"12","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/Messenger/UserProfile.jsx":"13","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/utils/MapChatHistory.jsx":"14"},{"size":254,"mtime":1685458776547,"results":"15","hashOfConfig":"16"},{"size":1312,"mtime":1687687110961,"results":"17","hashOfConfig":"16"},{"size":9718,"mtime":1689362670019,"results":"18","hashOfConfig":"16"},{"size":3022,"mtime":1687848212312,"results":"19","hashOfConfig":"16"},{"size":5276,"mtime":1696771664685,"results":"20","hashOfConfig":"16"},{"size":2013,"mtime":1687986639386,"results":"21","hashOfConfig":"16"},{"size":2616,"mtime":1687847514524,"results":"22","hashOfConfig":"16"},{"size":4088,"mtime":1687359633977,"results":"23","hashOfConfig":"16"},{"size":8438,"mtime":1691517279473,"results":"24","hashOfConfig":"16"},{"size":6579,"mtime":1687792273698,"results":"25","hashOfConfig":"16"},{"size":573,"mtime":1687931950596,"results":"26","hashOfConfig":"16"},{"size":1092,"mtime":1696764576319,"results":"27","hashOfConfig":"16"},{"size":1094,"mtime":1696764988921,"results":"28","hashOfConfig":"16"},{"size":691,"mtime":1689503903294,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1jpqxrp",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/index.js",[],[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/App.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/Messenger/Messenger.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/Messenger/Settings.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/Messenger/UserChats.jsx",["74","75","76","77","78"],[],"import * as React from \"react\";\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\n\nimport \"./UserChats.css\";\nimport send from \"./../../images/send.png\";\nimport pen from \"./../../images/pen.png\";\nimport { SessionUserDetails, setSessionUserDetails } from \"./Messenger\";\n\nfunction UserChats(props) {\n  // Logged in user details\n  let SessionUser = React.useContext(SessionUserDetails);\n  // Reciver user Details\n  const [ReciverDetails, setReciverDetails] = React.useState({});\n\n  // Get Chats from databaseId and set Chats\n  const [resultChats, setresultChats] = React.useState(<></>);\n\n  const GetChats = async (id) => {\n    try {\n      const res = await fetch(`http://localhost:5000/users/getchats?id=${id}`);\n      const data = await res.json();\n      console.log(data);\n      let resChats = await data.data.map(async (e) => {\n        const ObjectData = JSON.parse(e);\n        // console.log(ObjectData.imgLink);\n        const image = await fetch(ObjectData.imgLink);\n        const imageJson = await image.text();\n        if (ObjectData.sendersId === SessionUser.id) {\n          return <ReciverChats pngData={imageJson} />;\n        } else {\n          return <SenderChats pngData={imageJson} />;\n        }\n      });\n      const finalRes = await Promise.all(resChats);\n      setresultChats(finalRes);\n    } catch (err) {\n      console.log(\"error: \" + err);\n    }\n  };\n\n  const fetchChats = async () => {\n    const data = await GetChats(props.databaseId);\n  };\n\n  React.useEffect(() => {\n    fetchChats();\n  }, [props.databaseId]);\n\n  React.useEffect(() => {\n    console.log(props);\n    setReciverDetails({\n      id: props.id,\n      username: props.username,\n    });\n  }, [props.id, props.username]);\n  // Upload SVG to Database\n\n  const SvgUpload = async (data) => {\n    try {\n      const res = await fetch(\"http://localhost:5000/users/sendChat\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n        body: JSON.stringify({\n          svg: data,\n          SessionUser: SessionUser,\n          chat_history: SessionUser.chat_history,\n          ReciverDetails: ReciverDetails,\n        }),\n      });\n      const newData = await res.json();\n      // Fetch live chat\n    } catch {\n      console.log(\"Something went wrong!\");\n    }\n  };\n\n  const styles = {\n    zIndex: 4,\n    cursor: `url(${pen}), auto`,\n  };\n\n  const sketchRef = React.useRef(null);\n\n  const ClearHandler = () => {\n    sketchRef.current.clearCanvas();\n  };\n\n  const UndoHandler = () => {\n    sketchRef.current.undo();\n  };\n\n  const RedoHandler = () => {\n    sketchRef.current.redo();\n  };\n\n  const EraserHandler = (status) => {\n    sketchRef.current.eraseMode(status);\n  };\n\n  function SVGhandler() {\n    sketchRef.current.exportImage(\"png\").then((data) => {\n      // trigger socket.io\n\n      // trigger database to save messeages\n\n      SvgUpload(data);\n    });\n  }\n\n  return (\n    <div className=\"userchats\">\n      <div className=\"user--profile--chats\">\n        <div className=\"user--logo\">{props.username[0].toUpperCase()}</div>\n        <div className=\"user--information padding--left\">\n          <div className=\"limitlength user--name\">{props.username}</div>\n          <div className=\"limitlength user--email\">{props.lastActive}</div>\n        </div>\n      </div>\n      <div className=\"chats--space\">{resultChats}</div>\n      <div className=\"chat--tools\">\n        <div className=\"scribble--pad--tools\">\n          <ReactSketchCanvas\n            ref={sketchRef}\n            style={styles}\n            width=\"100%\"\n            height=\"100%\"\n            strokeWidth={4}\n            strokeColor=\"black\"\n            canvasColor=\"white\"\n          />\n        </div>\n        <div className=\"tools\">\n          <div\n            className=\"tools--btn pen\"\n            onClick={(e) => {\n              EraserHandler(false);\n            }}\n          >\n            Pen\n          </div>\n          <div\n            className=\"tools--btn eraser\"\n            onClick={(e) => {\n              EraserHandler(true);\n            }}\n          >\n            Eraser\n          </div>\n          <div className=\"tools--btn clearall\" onClick={ClearHandler}>\n            Clear All\n          </div>\n          <div className=\"tools--btn redo\" onClick={RedoHandler}>\n            Redo\n          </div>\n          <div className=\"tools--btn undo\" onClick={UndoHandler}>\n            Undo\n          </div>\n        </div>\n        <div className=\"send\" onClick={SVGhandler}>\n          <img className=\"send--img\" alt=\"send\" src={send}></img>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst SenderChats = ({ pngData }) => {\n  return (\n    <>\n      <div className=\"s--chat--main\">\n        <div className=\"user--logo\">A</div>\n        <img\n          alt=\"Something went wrong!\"\n          src={pngData}\n          className=\"user--chat--content\"\n        ></img>\n      </div>\n    </>\n  );\n};\n\nconst ReciverChats = ({ pngData }) => {\n  return (\n    <>\n      <div className=\"s--chat--main reciver\">\n        <div className=\"user--logo\">A</div>\n        <img\n          alt=\"Something went wrong!\"\n          className=\"user--chat--content\"\n          src={pngData}\n        ></img>\n      </div>\n    </>\n  );\n};\nexport default UserChats;\n","/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/User/Main.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/User/Forgotpassword.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/User/CreateAccount.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/User/Login.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/User/ResetPass.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/PopUp/Popup.js",[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/Messenger/SearchWindow.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/Components/Messenger/UserProfile.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects-1/MERN Stack/Chat-app/frontend/src/utils/MapChatHistory.jsx",[],[],{"ruleId":"79","severity":1,"message":"80","line":7,"column":30,"nodeType":"81","messageId":"82","endLine":7,"endColumn":51},{"ruleId":"79","severity":1,"message":"83","line":42,"column":11,"nodeType":"81","messageId":"82","endLine":42,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":47,"column":6,"nodeType":"86","endLine":47,"endColumn":24,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":55,"column":6,"nodeType":"86","endLine":55,"endColumn":32,"suggestions":"89"},{"ruleId":"79","severity":1,"message":"90","line":74,"column":13,"nodeType":"81","messageId":"82","endLine":74,"endColumn":20},"no-unused-vars","'setSessionUserDetails' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.","ArrayExpression",["91"],"React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["92"],"'newData' is assigned a value but never used.",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [fetchChats, props.databaseId]",{"range":"97","text":"98"},"Update the dependencies array to be: [props, props.id, props.username]",{"range":"99","text":"100"},[1516,1534],"[fetchChats, props.databaseId]",[1677,1703],"[props, props.id, props.username]"]