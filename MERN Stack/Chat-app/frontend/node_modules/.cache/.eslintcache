[{"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/index.js":"1","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/App.jsx":"2","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/Messenger/Messenger.jsx":"3","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/User/Main.jsx":"4","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/User/ResetPass.jsx":"5","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/Messenger/Settings.jsx":"6","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/Messenger/SearchWindow.jsx":"7","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/User/Login.jsx":"8","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/User/CreateAccount.jsx":"9","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/User/Forgotpassword.jsx":"10","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/utils/MapChatHistory.jsx":"11","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/Messenger/UserProfile.jsx":"12","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/Messenger/UserChats.jsx":"13","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/UserNotifications/Popup.js":"14"},{"size":254,"mtime":1699892248142,"results":"15","hashOfConfig":"16"},{"size":1341,"mtime":1703098070917,"results":"17","hashOfConfig":"16"},{"size":14938,"mtime":1703140894066,"results":"18","hashOfConfig":"16"},{"size":2013,"mtime":1699892248109,"results":"19","hashOfConfig":"16"},{"size":6579,"mtime":1699892248109,"results":"20","hashOfConfig":"16"},{"size":3025,"mtime":1703140754156,"results":"21","hashOfConfig":"16"},{"size":1092,"mtime":1699892248109,"results":"22","hashOfConfig":"16"},{"size":8438,"mtime":1699892248109,"results":"23","hashOfConfig":"16"},{"size":4088,"mtime":1699892248109,"results":"24","hashOfConfig":"16"},{"size":2616,"mtime":1699892248109,"results":"25","hashOfConfig":"16"},{"size":691,"mtime":1702989396584,"results":"26","hashOfConfig":"16"},{"size":1216,"mtime":1702989445500,"results":"27","hashOfConfig":"16"},{"size":5795,"mtime":1703064519737,"results":"28","hashOfConfig":"16"},{"size":573,"mtime":1699892248109,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"161b49z",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":23,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/index.js",[],[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/App.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/Messenger/Messenger.jsx",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],[],"import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Settings from \"./Settings\";\nimport logo from \"../../images/logo.png\";\n\nexport default function Messenger() {\n  const navigate = useNavigate();\n\n  // Loding Screen\n  const [loading, setloading] = useState(false);\n\n  // Search window close handler\n  const [searchWindow, setsearchWindow] = useState(false);\n\n  const openSearchWindow = () => setsearchWindow(true);\n  const HandleCloseSearchWindow = (e) => {\n    if (e.target.className !== \"search\" || !e.target.className !== \"profile\") {\n      setsearchWindow(false);\n    }\n  };\n\n  // Search settings state\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      {/* Loding div */}\n      <div\n        className=\"loading\"\n        style={loading ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <div className=\"loading--wrap\">\n          <div className=\"loader--text\"> Loading... </div>\n          <div className=\"outer--loader\">\n            <div className=\"loader\"></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Messenger */}\n      <div\n        className=\"messenger\"\n        onClick={(e) => {\n          HandleCloseSearchWindow(e);\n        }}\n      >\n        <div className=\"settings--div\">\n          <Settings open={open} setOpen={setOpen} />\n        </div>\n        {/* {walkthrough} */}\n        <div className=\"dashboard\">\n          <div className=\"m--header\">\n            <img className=\"m-header--logo\" alt=\"logo\" src={logo}></img>\n            <div className=\"m-header--title\">SCRIBBLE CHAT</div>\n          </div>\n          <div className=\"search--windowBox\">\n            <div className=\"search--box\">\n              <input\n                className=\"search\"\n                placeholder=\"Search\"\n                id=\"search\"\n                value={search}\n                autoComplete=\"off\"\n                onChange={(e) => {\n                  openSearchWindow();\n                  setsearch(e.target.value);\n                  SearchForUser(e.target.value);\n                }}\n              ></input>\n              <SearchWindow\n                style={\n                  searchWindow ? openSearchWindowStyle : closeSearchWindowStyle\n                }\n                socket={socket}\n                CurrentSession={UserSessionDetails}\n                openSearchWindow={openSearchWindow}\n                closeSearchWindow={closeSearchWindow}\n                searchData={searchData}\n                setsearch={setsearch}\n                ChatProfile={setUserChatProfile}\n                setUserChatProfile={setUserChatProfile}\n                setCurrentUserDetails={setCurrentUserDetails}\n                CurrentUserDetails={CurrentUserDetails}\n              />\n            </div>\n          </div>\n          <div className=\"chat--profiles\">\n            {/* History of chats */}\n            {ChatMap}\n          </div>\n          <hr className=\"endline\" />\n          <div className=\"user--profile\">\n            <div className=\"user--logo\">\n              {UserSessionDetails.username[0].toUpperCase()}\n            </div>\n            <div className=\"user--information\">\n              <div className=\"limitlength user--name\">\n                {UserSessionDetails.username}\n              </div>\n              <div className=\"limitlength user--email\">\n                {UserSessionDetails.email}\n              </div>\n            </div>\n            <div className=\"options\" onClick={handleOpen}>\n              <svg\n                fill=\"#000000\"\n                width=\"35px\"\n                height=\"35px\"\n                viewBox=\"0 0 32 32\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\"></g>\n                <g\n                  id=\"SVGRepo_tracerCarrier\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                ></g>\n                <g id=\"SVGRepo_iconCarrier\">\n                  <path d=\"M28.106 19.944h-0.85c-0.069-0.019-0.131-0.050-0.2-0.063-1.788-0.275-3.2-1.762-3.319-3.506-0.137-1.95 0.975-3.6 2.787-4.137 0.238-0.069 0.488-0.119 0.731-0.181h0.85c0.056 0.019 0.106 0.050 0.169 0.056 1.65 0.269 2.906 1.456 3.262 3.081 0.025 0.125 0.063 0.25 0.094 0.375v0.85c-0.019 0.056-0.050 0.113-0.056 0.169-0.262 1.625-1.419 2.863-3.025 3.238-0.156 0.038-0.3 0.081-0.444 0.119zM4.081 12.056l0.85 0c0.069 0.019 0.131 0.050 0.2 0.056 1.8 0.281 3.206 1.775 3.319 3.537 0.125 1.944-1 3.588-2.819 4.119-0.231 0.069-0.469 0.119-0.7 0.175h-0.85c-0.056-0.019-0.106-0.050-0.162-0.063-1.625-0.3-2.688-1.244-3.194-2.819-0.069-0.206-0.106-0.425-0.162-0.637v-0.85c0.019-0.056 0.050-0.113 0.056-0.169 0.269-1.631 1.419-2.863 3.025-3.238 0.15-0.037 0.294-0.075 0.437-0.113zM15.669 12.056h0.85c0.069 0.019 0.131 0.050 0.2 0.063 1.794 0.281 3.238 1.831 3.313 3.581 0.087 1.969-1.1 3.637-2.931 4.106-0.194 0.050-0.387 0.094-0.581 0.137h-0.85c-0.069-0.019-0.131-0.050-0.2-0.063-1.794-0.275-3.238-1.831-3.319-3.581-0.094-1.969 1.1-3.637 2.931-4.106 0.2-0.050 0.394-0.094 0.588-0.137z\"></path>{\" \"}\n                </g>\n              </svg>\n            </div>\n          </div>\n        </div>\n        <div className=\"message\">\n          <div className=\"message--layout\">{UserChatProfile}</div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst LandingPage = (props) => {\n  const styles = {\n    position: \"absolute\",\n  };\n  return (\n    <>\n      <ReactSketchCanvas\n        style={styles}\n        width=\"100%\"\n        height=\"100%\"\n        strokeWidth={5}\n        strokeColor=\"black\"\n        canvasColor=\"white\"\n      />\n      <WelcomePage />\n    </>\n  );\n};\n\n// function Messenger() {\n\n//   const socket = useRef();\n\n//   // Search user state\n\n//   // Search Window click Handler\n//\n\n//   // Loading state\n\n//   // User chat profile state\n//   const [UserChatProfile, setUserChatProfile] = useState(<LandingPage />);\n\n//   // User session details state\n//   const [UserSessionDetails, setUserSessionDetails] = useState({\n//     username: \" \",\n//     chat_history: [],\n//   });\n//   SessionUserDetails = createContext(UserSessionDetails);\n//   setSessionUserDetails = createContext(setUserSessionDetails);\n//   // Current user details state\n//   const [CurrentUserDetails, setCurrentUserDetails] = useState({\n//     username: \"\",\n//   });\n\n//   // IO connection\n\n//   useEffect(() => {\n//     if (CurrentUserDetails.id) {\n//       socket.current = io(\"http://localhost:5000\");\n//       socket.current.emit(\"add-user\", CurrentUserDetails.id);\n//     }\n//   }, [CurrentUserDetails]);\n\n//   //  Profile Setting State\n//\n\n//   // Seacrch window state handler\n//\n//   // Search window component style\n//   const openSearchWindowStyle = {\n//     display: \"block\",\n//     zIndex: \"3\",\n//   };\n\n//   const closeSearchWindowStyle = {\n//     display: \"none\",\n//     zIndex: \"-3\",\n//   };\n\n//   // Walkthrough state handler\\\n//   const [walkthrough, setwalkthrough] = useState(\"\");\n\n//   // User Search function\n//   const SearchForUser = async (val) => {\n//     try {\n//       const data = await fetch(\n//         `http://localhost:5000/users/search?username=${val}&userId=${UserSessionDetails.id}`,\n//         {\n//           method: \"get\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//         }\n//       );\n//       const res = await data.json();\n//       setsearchData(res);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n\n//   // Session check\n//   useEffect(() => {\n//     const CheckSession = async () => {\n//       setloading(true);\n//       try {\n//         const data = await fetch(`http://localhost:5000/users/session`, {\n//           method: \"get\",\n//           credentials: \"include\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//         });\n//         const res = await data.json();\n\n//         if (res.code === 500) {\n//           navigate(\"/\");\n//           setloading(false);\n//         } else {\n//           setloading(false);\n//           setUserSessionDetails(res.data);\n//           if (res.data.chat_history.length === 0) {\n//             setwalkthrough(\n//               <Popup\n//                 content=\"Get started by searching for your friends by their username and start chatting with them.\"\n//                 position={{ mt: \"170px\", ml: \"50px\" }}\n//                 setwalkthrough={setwalkthrough}\n//               />\n//             );\n//           }\n//         }\n//       } catch (err) {\n//         console.log(err);\n//         navigate(\"/\");\n//       }\n//     };\n//     CheckSession();\n//   }, [navigate]);\n\n//   // Chat History Map\n//   let ChatMap = MapChatHistory(\n//     UserSessionDetails,\n//     setCurrentUserDetails,\n//     CurrentUserDetails,\n//     closeSearchWindow,\n//     setUserChatProfile,\n//     searchData,\n//     setsearch,\n//     setUserChatProfile\n//   );\n\n//   // Landing page component\n\n//   return (\n//     <>\n//       <div\n//         className=\"loading\"\n//         style={loading ? { display: \"block\" } : { display: \"none\" }}\n//       >\n//         <div className=\"loading--wrap\">\n//           <div className=\"loader--text\"> Loading... </div>\n//           <div className=\"outer--loader\">\n//             <div className=\"loader\"></div>\n//           </div>\n//         </div>\n//       </div>\n//       <div\n//         className=\"messenger\"\n//         onClick={(e) => {\n//           HandleCloseSearchWindow(e);\n//         }}\n//       >\n//         <div className=\"settings--div\">\n//           <Settings open={open} handleClose={handleClose} />\n//         </div>\n//         {walkthrough}\n//         <div className=\"dashboard\">\n//           <div className=\"m--header\">\n//             <img className=\"m-header--logo\" alt=\"logo\" src={logo}></img>\n//             <div className=\"m-header--title\">SCRIBBLE CHAT</div>\n//           </div>\n//           <div className=\"search--windowBox\">\n//             <div className=\"search--box\">\n//               <input\n//                 className=\"search\"\n//                 placeholder=\"Search\"\n//                 id=\"search\"\n//                 value={search}\n//                 autoComplete=\"off\"\n//                 onChange={(e) => {\n//                   openSearchWindow();\n//                   setsearch(e.target.value);\n//                   SearchForUser(e.target.value);\n//                 }}\n//               ></input>\n//               <SearchWindow\n//                 style={\n//                   searchWindow ? openSearchWindowStyle : closeSearchWindowStyle\n//                 }\n//                 socket={socket}\n//                 CurrentSession={UserSessionDetails}\n//                 openSearchWindow={openSearchWindow}\n//                 closeSearchWindow={closeSearchWindow}\n//                 searchData={searchData}\n//                 setsearch={setsearch}\n//                 ChatProfile={setUserChatProfile}\n//                 setUserChatProfile={setUserChatProfile}\n//                 setCurrentUserDetails={setCurrentUserDetails}\n//                 CurrentUserDetails={CurrentUserDetails}\n//               />\n//             </div>\n//           </div>\n//           <div className=\"chat--profiles\">\n//             {/* History of chats */}\n//             {ChatMap}\n//           </div>\n//           <hr className=\"endline\" />\n//           <div className=\"user--profile\">\n//             <div className=\"user--logo\">\n//               {UserSessionDetails.username[0].toUpperCase()}\n//             </div>\n//             <div className=\"user--information\">\n//               <div className=\"limitlength user--name\">\n//                 {UserSessionDetails.username}\n//               </div>\n//               <div className=\"limitlength user--email\">\n//                 {UserSessionDetails.email}\n//               </div>\n//             </div>\n//             <div className=\"options\" onClick={handleOpen}>\n//               <svg\n//                 fill=\"#000000\"\n//                 width=\"35px\"\n//                 height=\"35px\"\n//                 viewBox=\"0 0 32 32\"\n//                 version=\"1.1\"\n//                 xmlns=\"http://www.w3.org/2000/svg\"\n//               >\n//                 <g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\"></g>\n//                 <g\n//                   id=\"SVGRepo_tracerCarrier\"\n//                   strokeLinecap=\"round\"\n//                   strokeLinejoin=\"round\"\n//                 ></g>\n//                 <g id=\"SVGRepo_iconCarrier\">\n//                   <path d=\"M28.106 19.944h-0.85c-0.069-0.019-0.131-0.050-0.2-0.063-1.788-0.275-3.2-1.762-3.319-3.506-0.137-1.95 0.975-3.6 2.787-4.137 0.238-0.069 0.488-0.119 0.731-0.181h0.85c0.056 0.019 0.106 0.050 0.169 0.056 1.65 0.269 2.906 1.456 3.262 3.081 0.025 0.125 0.063 0.25 0.094 0.375v0.85c-0.019 0.056-0.050 0.113-0.056 0.169-0.262 1.625-1.419 2.863-3.025 3.238-0.156 0.038-0.3 0.081-0.444 0.119zM4.081 12.056l0.85 0c0.069 0.019 0.131 0.050 0.2 0.056 1.8 0.281 3.206 1.775 3.319 3.537 0.125 1.944-1 3.588-2.819 4.119-0.231 0.069-0.469 0.119-0.7 0.175h-0.85c-0.056-0.019-0.106-0.050-0.162-0.063-1.625-0.3-2.688-1.244-3.194-2.819-0.069-0.206-0.106-0.425-0.162-0.637v-0.85c0.019-0.056 0.050-0.113 0.056-0.169 0.269-1.631 1.419-2.863 3.025-3.238 0.15-0.037 0.294-0.075 0.437-0.113zM15.669 12.056h0.85c0.069 0.019 0.131 0.050 0.2 0.063 1.794 0.281 3.238 1.831 3.313 3.581 0.087 1.969-1.1 3.637-2.931 4.106-0.194 0.050-0.387 0.094-0.581 0.137h-0.85c-0.069-0.019-0.131-0.050-0.2-0.063-1.794-0.275-3.238-1.831-3.319-3.581-0.094-1.969 1.1-3.637 2.931-4.106 0.2-0.050 0.394-0.094 0.588-0.137z\"></path>{\" \"}\n//                 </g>\n//               </svg>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"message\">\n//           <div className=\"message--layout\">{UserChatProfile}</div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// const LandingPage = (props) => {\n//   const styles = {\n//     position: \"absolute\",\n//   };\n//   return (\n//     <>\n//       <ReactSketchCanvas\n//         style={styles}\n//         width=\"100%\"\n//         height=\"100%\"\n//         strokeWidth={5}\n//         strokeColor=\"black\"\n//         canvasColor=\"white\"\n//       />\n//       <WelcomePage />\n//     </>\n//   );\n// };\n\n// const WelcomePage = () => {\n//   return (\n//     <div className=\"welcome\">\n//       <h1>Welcome to Scribble Chat!</h1>\n//       <h3>Chat with Your Friends, Privately and Securely.</h3>\n//       <summary>\n//         Scribble Chat is a unique messaging application that puts your privacy\n//         first. Our platform ensures that your conversations are confidential,\n//         without compromising on user experience. With Scribble Chat, you can\n//         connect with your friends in real-time, using a peer-to-peer connection\n//         that doesn't store any data on a centralized database.\n//       </summary>\n//     </div>\n//   );\n// };\n\n// export default Messenger;\n// export { SessionUserDetails, setSessionUserDetails };\n","/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/User/Main.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/User/ResetPass.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/Messenger/Settings.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/Messenger/SearchWindow.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/User/Login.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/User/CreateAccount.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/User/Forgotpassword.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/utils/MapChatHistory.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/Messenger/UserProfile.jsx",[],[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/Messenger/UserChats.jsx",["101","102","103","104","105"],[],"import * as React from \"react\";\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\n\nimport \"./UserChats.css\";\nimport send from \"./../../images/send.png\";\nimport pen from \"./../../images/pen.png\";\nimport { SessionUserDetails, setSessionUserDetails } from \"./Messenger\";\n\nfunction UserChats(props) {\n  // Logged in user details\n  let SessionUser = React.useContext(SessionUserDetails);\n  // Reciver user Details\n  const [ReciverDetails, setReciverDetails] = React.useState({});\n\n  // Get Chats from databaseId and set Chats\n  const [resultChats, setresultChats] = React.useState(<></>);\n  const GetChats = async (id) => {\n    try {\n      const res = await fetch(`http://localhost:5000/users/getchats?id=${id}`);\n      const data = await res.json();\n      console.log(data);\n      let resChats = await data.data.map(async (e) => {\n        const ObjectData = JSON.parse(e);\n        const image = await fetch(ObjectData.imgLink);\n        const imageJson = await image.text();\n        if (ObjectData.sendersId === SessionUser.id) {\n          return <ReciverChats pngData={imageJson} />;\n        } else {\n          return <SenderChats pngData={imageJson} />;\n        }\n      });\n      const finalRes = await Promise.all(resChats);\n      setresultChats(finalRes);\n    } catch (err) {\n      console.log(\"error: \" + err);\n    }\n  };\n\n  const fetchChats = async () => {\n    const data = await GetChats(props.databaseId);\n  };\n\n  React.useEffect(() => {\n    fetchChats();\n  }, [props.databaseId]);\n\n  React.useEffect(() => {\n    console.log(props);\n    setReciverDetails({\n      id: props.id,\n      username: props.username,\n    });\n  }, [props.id, props.username]);\n  // Upload SVG to Database\n\n  const SvgUpload = async (data) => {\n    try {\n      const res = await fetch(\"http://localhost:5000/users/sendChat\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n        body: JSON.stringify({\n          svg: data,\n          SessionUser: SessionUser,\n          chat_history: SessionUser.chat_history,\n          ReciverDetails: ReciverDetails,\n        }),\n      });\n\n      console.log(\"Sent successfully!\");\n      // const newData = await res.json();\n      // Fetch live chat\n    } catch {\n      console.log(\"Something went wrong!\");\n    }\n  };\n\n  const styles = {\n    zIndex: 4,\n    cursor: `url(${pen}), auto`,\n  };\n\n  const sketchRef = React.useRef(null);\n\n  const ClearHandler = () => {\n    sketchRef.current.clearCanvas();\n  };\n\n  const UndoHandler = () => {\n    sketchRef.current.undo();\n  };\n\n  const RedoHandler = () => {\n    sketchRef.current.redo();\n  };\n\n  const EraserHandler = (status) => {\n    sketchRef.current.eraseMode(status);\n  };\n\n  function SVGhandler() {\n    sketchRef.current.exportImage(\"png\").then((data) => {\n      // trigger socket.io\n      // trigger database to save messeages\n      SvgUpload(data).then(() => {\n        console.log(\"Changing State\");\n        props.setUserChatProfile(\n          <UserChats\n            username={props.username}\n            socket={props.socket}\n            id={props.id}\n            lastActive={props.lastActive}\n            CurrentSession={props.CurrentSession}\n            databaseId={props.databaseId}\n            setUserChatProfile={props.setUserChatProfile}\n            setCurrentUserDetails={props.setCurrentUserDetails}\n            updated={true}\n          />\n        );\n      });\n    });\n  }\n\n  return (\n    <div className=\"userchats\">\n      <div className=\"user--profile--chats\">\n        <div className=\"user--logo\">{props.username[0].toUpperCase()}</div>\n        <div className=\"user--information padding--left\">\n          <div className=\"limitlength user--name\">{props.username}</div>\n          <div className=\"limitlength user--email\">{props.lastActive}</div>\n        </div>\n      </div>\n      <div className=\"chats--space\">{resultChats}</div>\n      <div className=\"chat--tools\">\n        <div className=\"scribble--pad--tools\">\n          <ReactSketchCanvas\n            ref={sketchRef}\n            style={styles}\n            width=\"100%\"\n            height=\"100%\"\n            strokeWidth={4}\n            strokeColor=\"black\"\n            canvasColor=\"white\"\n          />\n        </div>\n        <div className=\"tools\">\n          <div\n            className=\"tools--btn pen\"\n            onClick={(e) => {\n              EraserHandler(false);\n            }}\n          >\n            Pen\n          </div>\n          <div\n            className=\"tools--btn eraser\"\n            onClick={(e) => {\n              EraserHandler(true);\n            }}\n          >\n            Eraser\n          </div>\n          <div className=\"tools--btn clearall\" onClick={ClearHandler}>\n            Clear All\n          </div>\n          <div className=\"tools--btn redo\" onClick={RedoHandler}>\n            Redo\n          </div>\n          <div className=\"tools--btn undo\" onClick={UndoHandler}>\n            Undo\n          </div>\n        </div>\n        <div className=\"send\" onClick={SVGhandler}>\n          <img className=\"send--img\" alt=\"send\" src={send}></img>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst SenderChats = ({ pngData }) => {\n  return (\n    <>\n      <div className=\"s--chat--main\">\n        <div className=\"user--logo\">A</div>\n        <img\n          alt=\"Something went wrong!\"\n          src={pngData}\n          className=\"user--chat--content\"\n        ></img>\n      </div>\n    </>\n  );\n};\n\nconst ReciverChats = ({ pngData }) => {\n  return (\n    <>\n      <div className=\"s--chat--main reciver\">\n        <div className=\"user--logo\">A</div>\n        <img\n          alt=\"Something went wrong!\"\n          className=\"user--chat--content\"\n          src={pngData}\n        ></img>\n      </div>\n    </>\n  );\n};\nexport default UserChats;\n",[],"/home/intruder/Github/Full-StackDev-Projects/MERN Stack/Chat-app/frontend/src/Components/UserNotifications/Popup.js",[],[],{"ruleId":"106","severity":1,"message":"107","line":7,"column":9,"nodeType":"108","messageId":"109","endLine":7,"endColumn":17},{"ruleId":"106","severity":1,"message":"110","line":10,"column":19,"nodeType":"108","messageId":"109","endLine":10,"endColumn":29},{"ruleId":"111","severity":2,"message":"112","line":62,"column":24,"nodeType":"108","messageId":"113","endLine":62,"endColumn":30},{"ruleId":"111","severity":2,"message":"114","line":66,"column":19,"nodeType":"108","messageId":"113","endLine":66,"endColumn":28},{"ruleId":"111","severity":2,"message":"115","line":67,"column":19,"nodeType":"108","messageId":"113","endLine":67,"endColumn":32},{"ruleId":"116","severity":2,"message":"117","line":70,"column":16,"nodeType":"118","messageId":"119","endLine":70,"endColumn":28},{"ruleId":"111","severity":2,"message":"120","line":72,"column":34,"nodeType":"108","messageId":"113","endLine":72,"endColumn":55},{"ruleId":"111","severity":2,"message":"121","line":72,"column":58,"nodeType":"108","messageId":"113","endLine":72,"endColumn":80},{"ruleId":"111","severity":2,"message":"122","line":74,"column":25,"nodeType":"108","messageId":"113","endLine":74,"endColumn":31},{"ruleId":"111","severity":2,"message":"123","line":75,"column":33,"nodeType":"108","messageId":"113","endLine":75,"endColumn":51},{"ruleId":"111","severity":2,"message":"124","line":77,"column":36,"nodeType":"108","messageId":"113","endLine":77,"endColumn":53},{"ruleId":"111","severity":2,"message":"125","line":78,"column":29,"nodeType":"108","messageId":"113","endLine":78,"endColumn":39},{"ruleId":"111","severity":2,"message":"114","line":79,"column":28,"nodeType":"108","messageId":"113","endLine":79,"endColumn":37},{"ruleId":"111","severity":2,"message":"126","line":80,"column":30,"nodeType":"108","messageId":"113","endLine":80,"endColumn":48},{"ruleId":"111","severity":2,"message":"126","line":81,"column":37,"nodeType":"108","messageId":"113","endLine":81,"endColumn":55},{"ruleId":"111","severity":2,"message":"127","line":82,"column":40,"nodeType":"108","messageId":"113","endLine":82,"endColumn":61},{"ruleId":"111","severity":2,"message":"128","line":83,"column":37,"nodeType":"108","messageId":"113","endLine":83,"endColumn":55},{"ruleId":"111","severity":2,"message":"129","line":89,"column":14,"nodeType":"108","messageId":"113","endLine":89,"endColumn":21},{"ruleId":"111","severity":2,"message":"123","line":94,"column":16,"nodeType":"108","messageId":"113","endLine":94,"endColumn":34},{"ruleId":"111","severity":2,"message":"123","line":98,"column":18,"nodeType":"108","messageId":"113","endLine":98,"endColumn":36},{"ruleId":"111","severity":2,"message":"123","line":101,"column":18,"nodeType":"108","messageId":"113","endLine":101,"endColumn":36},{"ruleId":"111","severity":2,"message":"130","line":104,"column":47,"nodeType":"108","messageId":"113","endLine":104,"endColumn":57},{"ruleId":"111","severity":2,"message":"131","line":127,"column":45,"nodeType":"108","messageId":"113","endLine":127,"endColumn":60},{"ruleId":"106","severity":1,"message":"132","line":134,"column":7,"nodeType":"108","messageId":"109","endLine":134,"endColumn":18},{"ruleId":"116","severity":2,"message":"133","line":140,"column":8,"nodeType":"118","messageId":"119","endLine":140,"endColumn":25},{"ruleId":"116","severity":2,"message":"134","line":148,"column":8,"nodeType":"118","messageId":"119","endLine":148,"endColumn":19},{"ruleId":"106","severity":1,"message":"135","line":7,"column":30,"nodeType":"108","messageId":"109","endLine":7,"endColumn":51},{"ruleId":"106","severity":1,"message":"136","line":40,"column":11,"nodeType":"108","messageId":"109","endLine":40,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":45,"column":6,"nodeType":"139","endLine":45,"endColumn":24,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":53,"column":6,"nodeType":"139","endLine":53,"endColumn":32,"suggestions":"142"},{"ruleId":"106","severity":1,"message":"143","line":58,"column":13,"nodeType":"108","messageId":"109","endLine":58,"endColumn":16},"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","'setloading' is assigned a value but never used.","no-undef","'search' is not defined.","undef","'setsearch' is not defined.","'SearchForUser' is not defined.","react/jsx-no-undef","'SearchWindow' is not defined.","JSXIdentifier","undefined","'openSearchWindowStyle' is not defined.","'closeSearchWindowStyle' is not defined.","'socket' is not defined.","'UserSessionDetails' is not defined.","'closeSearchWindow' is not defined.","'searchData' is not defined.","'setUserChatProfile' is not defined.","'setCurrentUserDetails' is not defined.","'CurrentUserDetails' is not defined.","'ChatMap' is not defined.","'handleOpen' is not defined.","'UserChatProfile' is not defined.","'LandingPage' is assigned a value but never used.","'ReactSketchCanvas' is not defined.","'WelcomePage' is not defined.","'setSessionUserDetails' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["145"],"'res' is assigned a value but never used.",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [fetchChats, props.databaseId]",{"range":"150","text":"151"},"Update the dependencies array to be: [props, props.id, props.username]",{"range":"152","text":"153"},[1471,1489],"[fetchChats, props.databaseId]",[1632,1658],"[props, props.id, props.username]"]